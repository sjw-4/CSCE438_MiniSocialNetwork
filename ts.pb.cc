// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ts.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ts.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tinysocial {

namespace {

const ::google::protobuf::Descriptor* User_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  User_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplyStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* Post_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Post_reflection_ = NULL;
const ::google::protobuf::Descriptor* NewPost_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NewPost_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ts_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_ts_2eproto() {
  protobuf_AddDesc_ts_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ts.proto");
  GOOGLE_CHECK(file != NULL);
  User_descriptor_ = file->message_type(0);
  static const int User_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, name_),
  };
  User_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      User_descriptor_,
      User::default_instance_,
      User_offsets_,
      -1,
      -1,
      -1,
      sizeof(User),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User, _is_default_instance_));
  ReplyStatus_descriptor_ = file->message_type(1);
  static const int ReplyStatus_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyStatus, stat_),
  };
  ReplyStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReplyStatus_descriptor_,
      ReplyStatus::default_instance_,
      ReplyStatus_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReplyStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyStatus, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyStatus, _is_default_instance_));
  Post_descriptor_ = file->message_type(2);
  static const int Post_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, posttext_),
  };
  Post_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Post_descriptor_,
      Post::default_instance_,
      Post_offsets_,
      -1,
      -1,
      -1,
      sizeof(Post),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Post, _is_default_instance_));
  NewPost_descriptor_ = file->message_type(3);
  static const int NewPost_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewPost, postfrom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewPost, posttext_),
  };
  NewPost_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NewPost_descriptor_,
      NewPost::default_instance_,
      NewPost_offsets_,
      -1,
      -1,
      -1,
      sizeof(NewPost),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewPost, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewPost, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ts_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      User_descriptor_, &User::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReplyStatus_descriptor_, &ReplyStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Post_descriptor_, &Post::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NewPost_descriptor_, &NewPost::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ts_2eproto() {
  delete User::default_instance_;
  delete User_reflection_;
  delete ReplyStatus::default_instance_;
  delete ReplyStatus_reflection_;
  delete Post::default_instance_;
  delete Post_reflection_;
  delete NewPost::default_instance_;
  delete NewPost_reflection_;
}

void protobuf_AddDesc_ts_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_ts_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\010ts.proto\022\ntinysocial\"\024\n\004User\022\014\n\004name\030\001"
    " \001(\t\"\033\n\013ReplyStatus\022\014\n\004stat\030\001 \001(\t\"4\n\004Pos"
    "t\022\014\n\004name\030\001 \001(\t\022\014\n\004time\030\002 \001(\003\022\020\n\010postTex"
    "t\030\003 \001(\t\"-\n\007NewPost\022\020\n\010postFrom\030\001 \001(\t\022\020\n\010"
    "postText\030\002 \001(\t2\246\002\n\nTinySocial\0221\n\007GetList"
    "\022\020.tinysocial.User\032\020.tinysocial.User\"\0000\001"
    "\0227\n\010Unfollow\022\020.tinysocial.User\032\027.tinysoc"
    "ial.ReplyStatus\"\000\0225\n\006Follow\022\020.tinysocial"
    ".User\032\027.tinysocial.ReplyStatus\"\000\0225\n\013GetT"
    "imeline\022\020.tinysocial.User\032\020.tinysocial.P"
    "ost\"\0000\001\022>\n\014PostTimeline\022\023.tinysocial.New"
    "Post\032\027.tinysocial.ReplyStatus\"\000B,\n\022io.gr"
    "pc.tinySocialB\017TinySocialProtoP\001\242\002\002TSb\006p"
    "roto3", 525);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ts.proto", &protobuf_RegisterTypes);
  User::default_instance_ = new User();
  ReplyStatus::default_instance_ = new ReplyStatus();
  Post::default_instance_ = new Post();
  NewPost::default_instance_ = new NewPost();
  User::default_instance_->InitAsDefaultInstance();
  ReplyStatus::default_instance_->InitAsDefaultInstance();
  Post::default_instance_->InitAsDefaultInstance();
  NewPost::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ts_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ts_2eproto {
  StaticDescriptorInitializer_ts_2eproto() {
    protobuf_AddDesc_ts_2eproto();
  }
} static_descriptor_initializer_ts_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocial.User)
}

void User::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

User::User(const User& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinysocial.User)
}

void User::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

User::~User() {
  // @@protoc_insertion_point(destructor:tinysocial.User)
  SharedDtor();
}

void User::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void User::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return User_descriptor_;
}

const User& User::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ts_2eproto();
  return *default_instance_;
}

User* User::default_instance_ = NULL;

User* User::New(::google::protobuf::Arena* arena) const {
  User* n = new User;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocial.User)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocial.User)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocial.User.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocial.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocial.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocial.User)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.User.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:tinysocial.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinysocial.User)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.User.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinysocial.User)
  return target;
}

int User::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocial.User)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocial.User)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const User* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocial.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocial.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocial.User)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocial.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocial.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {

  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = User_descriptor_;
  metadata.reflection = User_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// User

// optional string name = 1;
void User::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& User::name() const {
  // @@protoc_insertion_point(field_get:tinysocial.User.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinysocial.User.name)
}
 void User::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinysocial.User.name)
}
 void User::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinysocial.User.name)
}
 ::std::string* User::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tinysocial.User.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* User::release_name() {
  // @@protoc_insertion_point(field_release:tinysocial.User.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tinysocial.User.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyStatus::kStatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyStatus::ReplyStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocial.ReplyStatus)
}

void ReplyStatus::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ReplyStatus::ReplyStatus(const ReplyStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinysocial.ReplyStatus)
}

void ReplyStatus::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  stat_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReplyStatus::~ReplyStatus() {
  // @@protoc_insertion_point(destructor:tinysocial.ReplyStatus)
  SharedDtor();
}

void ReplyStatus::SharedDtor() {
  stat_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReplyStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyStatus_descriptor_;
}

const ReplyStatus& ReplyStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ts_2eproto();
  return *default_instance_;
}

ReplyStatus* ReplyStatus::default_instance_ = NULL;

ReplyStatus* ReplyStatus::New(::google::protobuf::Arena* arena) const {
  ReplyStatus* n = new ReplyStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReplyStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocial.ReplyStatus)
  stat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReplyStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocial.ReplyStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string stat = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stat()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stat().data(), this->stat().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocial.ReplyStatus.stat"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocial.ReplyStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocial.ReplyStatus)
  return false;
#undef DO_
}

void ReplyStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocial.ReplyStatus)
  // optional string stat = 1;
  if (this->stat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stat().data(), this->stat().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.ReplyStatus.stat");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stat(), output);
  }

  // @@protoc_insertion_point(serialize_end:tinysocial.ReplyStatus)
}

::google::protobuf::uint8* ReplyStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinysocial.ReplyStatus)
  // optional string stat = 1;
  if (this->stat().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stat().data(), this->stat().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.ReplyStatus.stat");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stat(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinysocial.ReplyStatus)
  return target;
}

int ReplyStatus::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocial.ReplyStatus)
  int total_size = 0;

  // optional string stat = 1;
  if (this->stat().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stat());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocial.ReplyStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ReplyStatus* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocial.ReplyStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocial.ReplyStatus)
    MergeFrom(*source);
  }
}

void ReplyStatus::MergeFrom(const ReplyStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocial.ReplyStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.stat().size() > 0) {

    stat_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stat_);
  }
}

void ReplyStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocial.ReplyStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyStatus::CopyFrom(const ReplyStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocial.ReplyStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyStatus::IsInitialized() const {

  return true;
}

void ReplyStatus::Swap(ReplyStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyStatus::InternalSwap(ReplyStatus* other) {
  stat_.Swap(&other->stat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReplyStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyStatus_descriptor_;
  metadata.reflection = ReplyStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReplyStatus

// optional string stat = 1;
void ReplyStatus::clear_stat() {
  stat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ReplyStatus::stat() const {
  // @@protoc_insertion_point(field_get:tinysocial.ReplyStatus.stat)
  return stat_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReplyStatus::set_stat(const ::std::string& value) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinysocial.ReplyStatus.stat)
}
 void ReplyStatus::set_stat(const char* value) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinysocial.ReplyStatus.stat)
}
 void ReplyStatus::set_stat(const char* value, size_t size) {
  
  stat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinysocial.ReplyStatus.stat)
}
 ::std::string* ReplyStatus::mutable_stat() {
  
  // @@protoc_insertion_point(field_mutable:tinysocial.ReplyStatus.stat)
  return stat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReplyStatus::release_stat() {
  // @@protoc_insertion_point(field_release:tinysocial.ReplyStatus.stat)
  
  return stat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReplyStatus::set_allocated_stat(::std::string* stat) {
  if (stat != NULL) {
    
  } else {
    
  }
  stat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stat);
  // @@protoc_insertion_point(field_set_allocated:tinysocial.ReplyStatus.stat)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Post::kNameFieldNumber;
const int Post::kTimeFieldNumber;
const int Post::kPostTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Post::Post()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocial.Post)
}

void Post::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Post::Post(const Post& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinysocial.Post)
}

void Post::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
  posttext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Post::~Post() {
  // @@protoc_insertion_point(destructor:tinysocial.Post)
  SharedDtor();
}

void Post::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posttext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Post::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Post::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Post_descriptor_;
}

const Post& Post::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ts_2eproto();
  return *default_instance_;
}

Post* Post::default_instance_ = NULL;

Post* Post::New(::google::protobuf::Arena* arena) const {
  Post* n = new Post;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Post::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocial.Post)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_ = GOOGLE_LONGLONG(0);
  posttext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Post::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocial.Post)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocial.Post.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_time;
        break;
      }

      // optional int64 time = 2;
      case 2: {
        if (tag == 16) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_postText;
        break;
      }

      // optional string postText = 3;
      case 3: {
        if (tag == 26) {
         parse_postText:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_posttext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->posttext().data(), this->posttext().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocial.Post.postText"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocial.Post)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocial.Post)
  return false;
#undef DO_
}

void Post::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocial.Post)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.Post.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int64 time = 2;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->time(), output);
  }

  // optional string postText = 3;
  if (this->posttext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->posttext().data(), this->posttext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.Post.postText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->posttext(), output);
  }

  // @@protoc_insertion_point(serialize_end:tinysocial.Post)
}

::google::protobuf::uint8* Post::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinysocial.Post)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.Post.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int64 time = 2;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->time(), target);
  }

  // optional string postText = 3;
  if (this->posttext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->posttext().data(), this->posttext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.Post.postText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->posttext(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinysocial.Post)
  return target;
}

int Post::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocial.Post)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int64 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  // optional string postText = 3;
  if (this->posttext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->posttext());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Post::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocial.Post)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Post* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Post>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocial.Post)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocial.Post)
    MergeFrom(*source);
  }
}

void Post::MergeFrom(const Post& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocial.Post)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
  if (from.posttext().size() > 0) {

    posttext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posttext_);
  }
}

void Post::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocial.Post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Post::CopyFrom(const Post& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocial.Post)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Post::IsInitialized() const {

  return true;
}

void Post::Swap(Post* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Post::InternalSwap(Post* other) {
  name_.Swap(&other->name_);
  std::swap(time_, other->time_);
  posttext_.Swap(&other->posttext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Post::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Post_descriptor_;
  metadata.reflection = Post_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Post

// optional string name = 1;
void Post::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Post::name() const {
  // @@protoc_insertion_point(field_get:tinysocial.Post.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Post::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinysocial.Post.name)
}
 void Post::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinysocial.Post.name)
}
 void Post::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinysocial.Post.name)
}
 ::std::string* Post::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tinysocial.Post.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Post::release_name() {
  // @@protoc_insertion_point(field_release:tinysocial.Post.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Post::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:tinysocial.Post.name)
}

// optional int64 time = 2;
void Post::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 Post::time() const {
  // @@protoc_insertion_point(field_get:tinysocial.Post.time)
  return time_;
}
 void Post::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:tinysocial.Post.time)
}

// optional string postText = 3;
void Post::clear_posttext() {
  posttext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Post::posttext() const {
  // @@protoc_insertion_point(field_get:tinysocial.Post.postText)
  return posttext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Post::set_posttext(const ::std::string& value) {
  
  posttext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinysocial.Post.postText)
}
 void Post::set_posttext(const char* value) {
  
  posttext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinysocial.Post.postText)
}
 void Post::set_posttext(const char* value, size_t size) {
  
  posttext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinysocial.Post.postText)
}
 ::std::string* Post::mutable_posttext() {
  
  // @@protoc_insertion_point(field_mutable:tinysocial.Post.postText)
  return posttext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Post::release_posttext() {
  // @@protoc_insertion_point(field_release:tinysocial.Post.postText)
  
  return posttext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Post::set_allocated_posttext(::std::string* posttext) {
  if (posttext != NULL) {
    
  } else {
    
  }
  posttext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), posttext);
  // @@protoc_insertion_point(field_set_allocated:tinysocial.Post.postText)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewPost::kPostFromFieldNumber;
const int NewPost::kPostTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewPost::NewPost()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tinysocial.NewPost)
}

void NewPost::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

NewPost::NewPost(const NewPost& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tinysocial.NewPost)
}

void NewPost::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  postfrom_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posttext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NewPost::~NewPost() {
  // @@protoc_insertion_point(destructor:tinysocial.NewPost)
  SharedDtor();
}

void NewPost::SharedDtor() {
  postfrom_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posttext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void NewPost::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewPost::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NewPost_descriptor_;
}

const NewPost& NewPost::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ts_2eproto();
  return *default_instance_;
}

NewPost* NewPost::default_instance_ = NULL;

NewPost* NewPost::New(::google::protobuf::Arena* arena) const {
  NewPost* n = new NewPost;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewPost::Clear() {
// @@protoc_insertion_point(message_clear_start:tinysocial.NewPost)
  postfrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posttext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool NewPost::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tinysocial.NewPost)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string postFrom = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_postfrom()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->postfrom().data(), this->postfrom().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocial.NewPost.postFrom"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_postText;
        break;
      }

      // optional string postText = 2;
      case 2: {
        if (tag == 18) {
         parse_postText:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_posttext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->posttext().data(), this->posttext().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tinysocial.NewPost.postText"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tinysocial.NewPost)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tinysocial.NewPost)
  return false;
#undef DO_
}

void NewPost::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tinysocial.NewPost)
  // optional string postFrom = 1;
  if (this->postfrom().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->postfrom().data(), this->postfrom().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.NewPost.postFrom");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->postfrom(), output);
  }

  // optional string postText = 2;
  if (this->posttext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->posttext().data(), this->posttext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.NewPost.postText");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->posttext(), output);
  }

  // @@protoc_insertion_point(serialize_end:tinysocial.NewPost)
}

::google::protobuf::uint8* NewPost::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinysocial.NewPost)
  // optional string postFrom = 1;
  if (this->postfrom().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->postfrom().data(), this->postfrom().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.NewPost.postFrom");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->postfrom(), target);
  }

  // optional string postText = 2;
  if (this->posttext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->posttext().data(), this->posttext().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tinysocial.NewPost.postText");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->posttext(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:tinysocial.NewPost)
  return target;
}

int NewPost::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tinysocial.NewPost)
  int total_size = 0;

  // optional string postFrom = 1;
  if (this->postfrom().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->postfrom());
  }

  // optional string postText = 2;
  if (this->posttext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->posttext());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewPost::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinysocial.NewPost)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const NewPost* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const NewPost>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinysocial.NewPost)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinysocial.NewPost)
    MergeFrom(*source);
  }
}

void NewPost::MergeFrom(const NewPost& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinysocial.NewPost)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.postfrom().size() > 0) {

    postfrom_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postfrom_);
  }
  if (from.posttext().size() > 0) {

    posttext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posttext_);
  }
}

void NewPost::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinysocial.NewPost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewPost::CopyFrom(const NewPost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinysocial.NewPost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewPost::IsInitialized() const {

  return true;
}

void NewPost::Swap(NewPost* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewPost::InternalSwap(NewPost* other) {
  postfrom_.Swap(&other->postfrom_);
  posttext_.Swap(&other->posttext_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewPost::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NewPost_descriptor_;
  metadata.reflection = NewPost_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewPost

// optional string postFrom = 1;
void NewPost::clear_postfrom() {
  postfrom_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NewPost::postfrom() const {
  // @@protoc_insertion_point(field_get:tinysocial.NewPost.postFrom)
  return postfrom_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewPost::set_postfrom(const ::std::string& value) {
  
  postfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinysocial.NewPost.postFrom)
}
 void NewPost::set_postfrom(const char* value) {
  
  postfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinysocial.NewPost.postFrom)
}
 void NewPost::set_postfrom(const char* value, size_t size) {
  
  postfrom_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinysocial.NewPost.postFrom)
}
 ::std::string* NewPost::mutable_postfrom() {
  
  // @@protoc_insertion_point(field_mutable:tinysocial.NewPost.postFrom)
  return postfrom_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewPost::release_postfrom() {
  // @@protoc_insertion_point(field_release:tinysocial.NewPost.postFrom)
  
  return postfrom_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewPost::set_allocated_postfrom(::std::string* postfrom) {
  if (postfrom != NULL) {
    
  } else {
    
  }
  postfrom_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postfrom);
  // @@protoc_insertion_point(field_set_allocated:tinysocial.NewPost.postFrom)
}

// optional string postText = 2;
void NewPost::clear_posttext() {
  posttext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& NewPost::posttext() const {
  // @@protoc_insertion_point(field_get:tinysocial.NewPost.postText)
  return posttext_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewPost::set_posttext(const ::std::string& value) {
  
  posttext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tinysocial.NewPost.postText)
}
 void NewPost::set_posttext(const char* value) {
  
  posttext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tinysocial.NewPost.postText)
}
 void NewPost::set_posttext(const char* value, size_t size) {
  
  posttext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tinysocial.NewPost.postText)
}
 ::std::string* NewPost::mutable_posttext() {
  
  // @@protoc_insertion_point(field_mutable:tinysocial.NewPost.postText)
  return posttext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* NewPost::release_posttext() {
  // @@protoc_insertion_point(field_release:tinysocial.NewPost.postText)
  
  return posttext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void NewPost::set_allocated_posttext(::std::string* posttext) {
  if (posttext != NULL) {
    
  } else {
    
  }
  posttext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), posttext);
  // @@protoc_insertion_point(field_set_allocated:tinysocial.NewPost.postText)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace tinysocial

// @@protoc_insertion_point(global_scope)
